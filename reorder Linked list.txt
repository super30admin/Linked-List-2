// Time:O(n)
// Space:O(1)
// Issues:None

class Solution {
    public void reorderList(ListNode head) {
        if(head == null || head.next == null)return;
        
        ListNode fast = head;
        ListNode slow = head;
        
        while(fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        
        fast = reverse(slow.next);
        slow.next = null;
        slow = head;
        ListNode temp;
        
        while(slow != null && fast != null){
            temp = slow.next;
            slow.next = fast;
            fast = fast.next;
            slow.next.next = temp;
            slow = temp;
        }
    }
    
    public ListNode reverse(ListNode node){
            ListNode pre = null;
            ListNode curr = node;
            ListNode nxt = curr.next;
            
            while(nxt != null){
                curr.next = pre;
                pre = curr;
                curr = nxt;
                nxt = nxt.next;
            }
            
        curr.next = pre;
        return curr;
    }
}