Time Complexity: O(m+n) m: elements in first LinkedList, n: elements in second LinkedList
Space Complexity: O(1)

public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
       ListNode curr = headA;
       int lenA = 0; int lenB =0;
       //calculating lenA
        while(curr!=null)
       {
           lenA++;
           curr = curr.next;
       }
       //calculating lenB
       curr = headB;
       while(curr!=null)
       {
           lenB++;
           curr = curr.next;
       }
        
       while(lenA < lenB)
       {
          headB = headB.next; 
          lenB--;
       }
       while(lenA > lenB)
       {
           headA = headA.next;
           lenA--;
       }
        while(headA != headB)
        {
            headA = headA.next;
            headB = headB.next;
        }
       return headA;
        
    }
}
