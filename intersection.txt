# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None
TC_O(M+N) 
SC-O(1)

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        if headA is None or headB is None:
            return None
        lenA=0
        curr=headA
        while curr !=None:
            lenA=lenA+1
            curr=curr.next
        lenB=0
        curr=headB
        while curr !=None:
            lenB=lenB+1
            curr=curr.next
        while lenA>lenB:
            headA=headA.next
            lenA=lenA-1
        while lenB>lenA:
            headB=headB.next
            lenB=lenB-1
        while headA !=headB:
            headA=headA.next
            headB=headB.next
        return headA


        